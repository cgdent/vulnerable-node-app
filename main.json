AWSTemplateFormatVersion: "2010-09-09"
Description: ""
Resources:
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-072276e586375df1d"
      InstanceType: "t2.micro"
      KeyName: "My APJ SE Sydney Key Pair"
      AvailabilityZone: !GetAtt EC2Instance2.AvailabilityZone
      Tenancy: "default"
      SubnetId: "subnet-01a44f8b6249180b3"
      EbsOptimized: false
      SecurityGroupIds: 
      - "sg-002ec7c65880d96c1"
      SourceDestCheck: true
      BlockDeviceMappings: 
      - 
        DeviceName: "/dev/xvda"
        Ebs: 
          Encrypted: false
          VolumeSize: 8
          SnapshotId: "snap-0b671f76f5e0c8971"
          VolumeType: "gp2"
          DeleteOnTermination: true
      Tags: 
      - 
        Key: "Name"
        Value: "MyMongoDBServer"
      HibernationOptions: 
        Configured: false
      EnclaveOptions: 
        Enabled: false

  EC2Instance2:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-0b334634a6fabcc4a"
      InstanceType: "t3.medium"
      AvailabilityZone: !Sub "${AWS::Region}a"
      Tenancy: "default"
      SubnetId: "subnet-082449d215e151f66"
      EbsOptimized: false
      SecurityGroupIds: 
      - "sg-0c8edf1a6ab4431e7"
      - "sg-0c8edf1a6ab4431e7"
      SourceDestCheck: true
      BlockDeviceMappings: 
      - 
        DeviceName: "/dev/xvda"
        Ebs: 
          Encrypted: false
          VolumeSize: 80
          SnapshotId: "snap-073d5be404a5028e1"
          VolumeType: "gp3"
          DeleteOnTermination: true
      IamInstanceProfile: "eks-dcc40c79-e265-93be-8fea-c4659b8a140c"
      Tags: 
      - 
        Key: "alpha.eksctl.io/nodegroup-type"
        Value: "managed"
      - 
        Key: "k8s.io/cluster-autoscaler/craig-eks"
        Value: "owned"
      - 
        Key: "k8s.io/cluster-autoscaler/enabled"
        Value: "true"
      - 
        Key: "alpha.eksctl.io/nodegroup-name"
        Value: "standard-workers"
      - 
        Key: "Name"
        Value: "craig-eks-standard-workers-Node"
      - 
        Key: "kubernetes.io/cluster/craig-eks"
        Value: "owned"
      - 
        Key: "eks:cluster-name"
        Value: "craig-eks"
      - 
        Key: "eks:nodegroup-name"
        Value: "standard-workers"
      HibernationOptions: 
        Configured: false
      CpuOptions: 
        CoreCount: 1
        ThreadsPerCore: 2
      EnclaveOptions: 
        Enabled: false

  EC2Instance3:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-0b334634a6fabcc4a"
      InstanceType: "t3.medium"
      AvailabilityZone: !Sub "${AWS::Region}c"
      Tenancy: "default"
      SubnetId: "subnet-0d48b149391be9a13"
      EbsOptimized: false
      SecurityGroupIds: 
      - "sg-0c8edf1a6ab4431e7"
      - "sg-0c8edf1a6ab4431e7"
      SourceDestCheck: true
      BlockDeviceMappings: 
      - 
        DeviceName: "/dev/xvda"
        Ebs: 
          Encrypted: false
          VolumeSize: 80
          SnapshotId: "snap-073d5be404a5028e1"
          VolumeType: "gp3"
          DeleteOnTermination: true
      IamInstanceProfile: "eks-dcc40c79-e265-93be-8fea-c4659b8a140c"
      Tags: 
      - 
        Key: "alpha.eksctl.io/nodegroup-type"
        Value: "managed"
      - 
        Key: "alpha.eksctl.io/nodegroup-name"
        Value: "standard-workers"
      - 
        Key: "k8s.io/cluster-autoscaler/enabled"
        Value: "true"
      - 
        Key: "k8s.io/cluster-autoscaler/craig-eks"
        Value: "owned"
      - 
        Key: "kubernetes.io/cluster/craig-eks"
        Value: "owned"
      - 
        Key: "eks:cluster-name"
        Value: "craig-eks"
      - 
        Key: "eks:nodegroup-name"
        Value: "standard-workers"
      - 
        Key: "Name"
        Value: "craig-eks-standard-workers-Node"
      HibernationOptions: 
        Configured: false
      CpuOptions: 
        CoreCount: 1
        ThreadsPerCore: 2
      EnclaveOptions: 
        Enabled: false

  ElasticLoadBalancingLoadBalancer:
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties:
      LoadBalancerName: "aac7647d661b247d7a0de72b9c35655b"
      Listeners: 
      - 
        InstancePort: 31841
        InstanceProtocol: "TCP"
        LoadBalancerPort: 4000
        Protocol: "TCP"
      Subnets: 
      - "subnet-005efa804d7c15667"
      - "subnet-06c64e00c77bc38e0"
      - "subnet-09883a3444e25c8b5"
      Instances: 
      - !Ref EC2Instance3
      - !Ref EC2Instance2
      HealthCheck: 
        Target: "TCP:31841"
        Interval: 10
        Timeout: 5
        UnhealthyThreshold: 6
        HealthyThreshold: 2
      SecurityGroups: 
      - "sg-0c32ba21fd790aeab"
      Scheme: "internet-facing"
      CrossZone: false
      AccessLoggingPolicy: 
        Enabled: false
      ConnectionDrainingPolicy: 
        Enabled: false
        Timeout: 300
      ConnectionSettings: 
        IdleTimeout: 60
      Tags: 
      - 
        Key: "kubernetes.io/service-name"
        Value: "vuln-node/goofservice"
      - 
        Key: "kubernetes.io/cluster/craig-eks"
        Value: "owned"

  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "mongodb-backups-tech-exercise"
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
        - 
          ServerSideEncryptionByDefault: 
            SSEAlgorithm: "AES256"
          BucketKeyEnabled: false

  ECRRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "vuln-node"
      LifecyclePolicy: 
        RegistryId: !Ref AWS::AccountId

  EKSCluster:
    Type: "AWS::EKS::Cluster"
    Properties:
      Name: "craig-eks"
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/eksctl-craig-eks-cluster-ServiceRole-1RB8ZVCN1RS0L"
      Version: "1.25"
      ResourcesVpcConfig: 
        SecurityGroupIds: 
        - "sg-0efa165528cfa2b91"
        SubnetIds: 
        - "subnet-005efa804d7c15667"
        - "subnet-06c64e00c77bc38e0"
        - "subnet-09883a3444e25c8b5"
        - "subnet-02bebf959e12963a5"
        - "subnet-0d48b149391be9a13"
        - "subnet-082449d215e151f66"
      KubernetesNetworkConfig: 
        ServiceIpv4Cidr: "10.100.0.0/16"

  EC2VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "192.168.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"
      Tags: 
      - 
        Key: "eksctl.cluster.k8s.io/v1alpha1/cluster-name"
        Value: "craig-eks"
      - 
        Key: "alpha.eksctl.io/eksctl-version"
        Value: "0.139.0"
      - 
        Key: "alpha.eksctl.io/cluster-name"
        Value: "craig-eks"
      - 
        Key: "alpha.eksctl.io/cluster-oidc-enabled"
        Value: "false"
      - 
        Key: "Name"
        Value: "eksctl-craig-eks-cluster/VPC"

  EC2VPC2:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"
      Tags: 
      - 
        Key: "Name"
        Value: "TechExercise-vpc"

